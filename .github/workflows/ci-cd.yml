name : CI/CD Pipeline

on:
    push:
        branches:
            - main # 메인 브랜치 푸시 할때

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest

        steps:
        # 1. Github 저장소의 코드를 현재 워크플로우 실행 환경으로 클론
        - name: Checkout code
          uses: actions/checkout@v3
        
        # 2. Node 설정
        - name: Set up Node
          uses: actions/setup-node@v3
          with:
            node-version: '22'

        # # 3. Gradle 실행 권한 부여
        # - name: Set exec Gradlew
        #   run: chmod +x gradlew

        # # 4. Gradle Build
        # - name: Build gradle
        #   run: ./gradlew build

        # 5. DockerHub 로그인
        - name: DockerHub Login
          uses: docker/login-action@v2
          with:
            username: ${{secrets.DOCKER_USERNAME}}
            password: ${{secrets.DOCKER_PASSWORD}}
        
        # 6. Docker 이미지 빌드 및 푸시
        - name: build and push Docker image
          run: |
            IMAGE_NAME=${{secrets.DOCKER_USERNAME}}/react-app
            TAG=${{github.sha}}
            docker build -t $IMAGE_NAME:$TAG .
            docker push $IMAGE_NAME:$TAG

        # 7. AWS EC2 배포
        - name: AWS EC2 Deply
          uses: appleboy/ssh-action@v0.1.8
          with:
            host: ${{secrets.AWS_EC2_HOST}}
            username: ${{secrets.AWS_EC2_USER}}
            key: ${{secrets.AWS_EC2_KEY}}
            passphrase: ${{ secrets.SSH_PASSPHRASE }}
            script: |
                docker pull ${{secrets.DOCKER_USERNAME}}/react-app:${{github.sha}}
                docker stop react-app || true
                docker rm react-app || true
                docker run -d -p 3000:3000 --name react-app ${{secrets.DOCKER_USERNAME}}/react-app:${{github.sha}}
